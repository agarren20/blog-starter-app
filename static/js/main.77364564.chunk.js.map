{"version":3,"sources":["Nav.js","Article.js","ArticleEntry.js","firebaseConfig.js","articleService.js","App.js","index.js"],"names":["Nav","articles","setArticle","user","setWriting","onClick","length","map","a","title","id","Article","article","removeArticle","className","date","body","ArticleEntry","addArticle","useState","setTitle","setBody","error","setError","onSubmit","e","preventDefault","trim","value","onChange","target","rows","type","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","getAuth","db","getFirestore","data","Date","addDoc","collection","docRef","console","log","deleteDoc","doc","getDocs","orderBy","limit","querySnapshot","docs","SignIn","signInWithPopup","GoogleAuthProvider","SignOut","currentUser","uid","displayName","signOut","App","setArticles","writing","useAuthState","useEffect","fetchArticles","then","createArticle","deleteArticle","artId","newList","filter","item","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.77364564.chunk.js","sourcesContent":["export default function Nav({ articles, setArticle, user, setWriting }) {\n  return (\n    <nav>\n      {user && (\n        <button onClick={() => setWriting(true)}>\n          <span>New Article</span>\n        </button>\n      )}\n      <ul>\n        {!articles || articles.length == 0\n          ? \"No articles\"\n          : articles.map((a) => (\n              <li\n                key={a.id}\n                onClick={() => {\n                  setArticle(a);\n                  setWriting(false);\n                }}\n              >\n                {a.title}\n              </li>\n            ))}\n      </ul>\n    </nav>\n  );\n}\n","import { useRef } from \"react\";\n\nexport default function Article({ article, removeArticle }) {\n  return (\n    <article>\n      {!article ? (\n        <p>\n          <h1 className=\"welcome\">\n            Welcome to the blog! Select an article to read!\n          </h1>\n        </p>\n      ) : (\n        <div>\n          <section>\n            <h2>{article.title}</h2>\n            <p className=\"date\">{`Posted: ${article.date}`}</p>\n            <p className=\"body\">{article.body}</p>\n          </section>\n          <button\n            onClick={() => {\n              removeArticle(article);\n            }}\n          >\n            <span>Delete</span>\n          </button>\n        </div>\n      )}\n    </article>\n  );\n}\n","import { useState } from \"react\";\n\nexport default function ArticleEntry({ addArticle }) {\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const [error, setError] = useState(null);\n\n  function submit(e) {\n    setError(null);\n    e.preventDefault();\n    if (!title.trim() || !body.trim()) {\n      setError(\"Both the title and body must be supplied\");\n    } else {\n      addArticle({ title, body });\n    }\n  }\n\n  return (\n    <div>\n      {\" \"}\n      <p className=\"entry\">\n        <form onSubmit={submit}>\n          {error && <p className=\"error\">{error}</p>}\n          Title\n          <input value={title} onChange={(e) => setTitle(e.target.value)} />\n          Body\n          <textarea\n            rows=\"8\"\n            value={body}\n            onChange={(e) => setBody(e.target.value)}\n          ></textarea>\n          <button type=\"submit\">\n            <span>Create</span>\n          </button>\n        </form>\n      </p>\n    </div>\n  );\n}\n","import { initializeApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\nimport { getFirestore } from \"firebase/firestore\";\n\nconst firebaseConfig = {\n  // THE CONFIG FROM YOUR FIREBASE CONSOLE\n  apiKey: \"AIzaSyBxrr1oBwj0xIBSvFoXBqIqKtqH_BbQkqM\",\n  authDomain: \"blog-d8935.firebaseapp.com\",\n  projectId: \"blog-d8935\",\n  storageBucket: \"blog-d8935.appspot.com\",\n  messagingSenderId: \"40335610312\",\n  appId: \"1:40335610312:web:a9f3f50abbcc9a60bc30fd\",\n};\n\nexport const app = initializeApp(firebaseConfig);\nexport const auth = getAuth(app);\nexport const db = getFirestore(app);\n","// This service completely hides the data store from the rest of the app.\n// No other part of the app knows how the data is stored. If anyone wants\n// to read or write data, they have to go through this service.\n\nimport { db } from \"./firebaseConfig\";\nimport {\n  collection,\n  getDocs,\n  addDoc,\n  doc,\n  deleteDoc,\n  orderBy,\n  limit,\n} from \"firebase/firestore\";\n\nexport async function createArticle({ title, body }) {\n  const data = { title, body, date: new Date() };\n  const docRef = await addDoc(collection(db, \"articles\"), data);\n  return { id: docRef.id, ...data };\n}\n\nexport async function deleteArticle({ article }) {\n  console.log(article);\n  const docRef = await deleteDoc(doc(db, \"articles\", article.id));\n  return article.id;\n}\n\nexport async function fetchArticles() {\n  const querySnapshot = await getDocs(\n    collection(db, \"articles\"),\n    orderBy(\"date\", \"desc\"),\n    limit(50)\n  );\n  return querySnapshot.docs.map((doc) => ({\n    id: doc.id,\n    ...doc.data(),\n  }));\n}\n","import { useEffect, useState } from \"react\";\nimport Nav from \"./Nav\";\nimport Article from \"./Article\";\nimport ArticleEntry from \"./ArticleEntry\";\nimport { fetchArticles, createArticle, deleteArticle } from \"./articleService\";\nimport { signInWithPopup, GoogleAuthProvider, signOut } from \"firebase/auth\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { auth } from \"./firebaseConfig\";\nimport \"./App.css\";\n\nfunction SignIn() {\n  return (\n    <button onClick={() => signInWithPopup(auth, new GoogleAuthProvider())}>\n      <span>Sign In</span>\n    </button>\n  );\n}\n\nfunction SignOut() {\n  {\n    if (auth.currentUser) console.log(auth.currentUser.uid);\n  }\n  return (\n    <div>\n      <span className=\"helloUser\">Hello, {auth.currentUser.displayName} </span>\n      <button onClick={() => signOut(auth)}>\n        <span>Sign Out</span>\n      </button>\n    </div>\n  );\n}\n\nexport default function App() {\n  const [articles, setArticles] = useState([]);\n  const [article, setArticle] = useState(null);\n  const [writing, setWriting] = useState(null);\n  const [user] = useAuthState(auth);\n\n  // This is a trivial app, so just fetch all the articles once, when\n  // the app is loaded. A real app would do pagination. Note that\n  // \"fetchArticles\" is what gets the articles from the service and\n  // then \"setArticles\" writes them into the React state.\n  useEffect(() => {\n    fetchArticles().then(setArticles);\n  }, []);\n\n  // Update the \"database\" *then* update the internal React state. These\n  // two steps are definitely necessary.\n  function addArticle({ title, body }) {\n    createArticle({ title, body }).then((article) => {\n      setArticle(article);\n      setArticles([article, ...articles]);\n      setWriting(false);\n    });\n  }\n\n  function removeArticle() {\n    deleteArticle({ article }).then((artId) => {\n      setArticle(null);\n      const newList = articles.filter((item) => item.id !== artId);\n      setArticles(newList);\n      setWriting(false);\n    });\n  }\n\n  return (\n    <div className=\"App\">\n      <header>\n        <div className=\"inner-cutout\">\n          <h1 className=\"knockout\">Color Guide</h1>{\" \"}\n        </div>\n        {!user ? <SignIn /> : <SignOut />}\n      </header>\n\n      {!user ? (\n        \"\"\n      ) : (\n        <Nav\n          articles={articles}\n          setArticle={setArticle}\n          setWriting={setWriting}\n          user={user}\n        />\n      )}\n\n      {!user ? (\n        <div>\n          <h1 className=\"log\">Sign in to learn about colors!</h1>\n        </div>\n      ) : writing ? (\n        <ArticleEntry addArticle={addArticle} />\n      ) : (\n        <Article article={article} removeArticle={removeArticle} />\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}